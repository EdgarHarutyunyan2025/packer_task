name: PR Terraform Plan

on:
  push:
    path:
      - "terraform/*"
      - ".github/workflows/update_terraform.yml"

jobs:
  build-and-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::877680973630:role/Terraform_ECS_Backent
          aws-region: eu-central-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform refresh
        id: refresh
        run: terraform refresh
        continue-on-error: true

      - name: Terraform Plan 
        id: plan
        run:  terraform plan  -no-color  > terraform-plan.txt
        continue-on-error: true

      - name: Upload Terraform Plan
        id: upload
        if: steps.refresh.outcome == 'success' && steps.plan.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform-plan.txt


      - name: Send plan to Telegram (as file)
        if: steps.refresh.outcome == 'success' && steps.plan.outcome == 'success'
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          document: terraform-plan.txt
          message: "✅ Terraform plan was successful !"

      - name: Send Telegram message
        if: steps.refresh.outcome != 'success' || steps.plan.outcome != 'success'
        uses: appleboy/telegram-action@master
        with: 
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: "❌ Terraform plan failed !"

